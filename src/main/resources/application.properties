spring.application.name=pg-api-gateway
server.port=9000
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/realms/pg-management-realm


# MySQL Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/pg_management?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Saketh@123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA and Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


#Keycloak
# Keycloak Configuration
keycloak.server-url = http://localhost:8180
keycloak.realm = pg-management-realm
keycloak.client-id = test_client
keycloak.client-secret = ZXHgmJ9wdw3IOwVPSl9OMAX9CtDOjq3R


# Actuator Endpoints
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


#Resilinece4j Properties
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5

#Resilience4J Timeout Properties
resilience4j.timelimiter.configs.default.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.configs.default.max-attempts=3
resilience4j.retry.configs.default.wait-duration=2s

management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=api-gateway
management.tracing.sampling.probability=1.0

# Other services URLs
tenantService.service.url = http://localhost:8080/
roomService.service.url = http://localhost:8081/
dueService.service.url = http://localhost:8082/
